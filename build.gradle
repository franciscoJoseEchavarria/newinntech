plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.eafit.retoamadeus'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

repositories {
	mavenCentral()
}

dependencies {
	// Dependencia principal de Spring Boot para iniciar el proyecto
	implementation 'org.springframework.boot:spring-boot-starter'

	// Starter para conectar y trabajar con bases de datos usando JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// Starter para implementar JPA en Spring Boot (manejo de persistencia)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Driver para conectar Spring Boot a una base de datos PostgreSQL
	implementation 'org.postgresql:postgresql:42.7.4'

	// Dependencia para pruebas unitarias en Spring Boot
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Plataforma de lanzamiento para pruebas con JUnit
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Librería para trabajar con JSON (serialización y deserialización)
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.0'

	// Implementación del núcleo de Hibernate ORM para manejar entidades JPA
	implementation 'org.hibernate.orm:hibernate-core:6.6.1.Final'

	// Librería para inyección de dependencias
	implementation 'jakarta.inject:jakarta.inject-api:2.0.1'

	// Lombok para reducir el código boilerplate (e.g., getters, setters)
	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'

	// Starter para construir aplicaciones web (incluye soporte RESTful)
	implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.1.31'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Librería MapStruct para generación automática de mapeos entre objetos
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	// Librería para leer archivos .env en Java
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	// SLF4J (Simple Logging Facade for Java)
	implementation 'org.slf4j:slf4j-api:2.0.7'
	implementation 'ch.qos.logback:logback-classic:1.4.12'

	// Testing
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'com.h2database:h2'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	// Validaciones
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(org.springframework.boot.gradle.tasks.run.BootRun) {
	mainClass.set('com.newinntech.newinntech.NewinntechApplication')
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-parameters"
}


bootJar {
	mainClass.set('com.newinntech.newinntech.NewinntechApplication')
}